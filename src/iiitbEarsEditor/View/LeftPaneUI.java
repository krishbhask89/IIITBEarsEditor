/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iiitbEarsEditor.View;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.EventObject;
import javax.swing.CellEditor;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.event.CellEditorListener;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import iiitbEarsEditor.View.MainUI;
import javax.swing.JPanel;

/**
 *
 * @author michael
 */
public class LeftPaneUI extends javax.swing.JPanel {//implements TableCellRenderer,TableCellEditor {

    /**
     * Creates new form LeftPaneUI
     */
    public LeftPaneUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        index_No = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        color = new javax.swing.JLabel();
        index_val = new javax.swing.JLabel();
        color_val = new javax.swing.JLabel();
        entities = new javax.swing.JButton();
        type_val = new javax.swing.JComboBox();

        index_No.setText("Index No.");

        type.setText("Type");

        color.setText("Color");

        index_val.setText("random");

        color_val.setForeground(new java.awt.Color(235, 24, 24));
        color_val.setText("red");

        entities.setText("Word Entities");

        type_val.setEditable(true);
        type_val.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Generic", "Ubiquitous", "Event Driven", "Unwanted", "State Driven", "Optional" }));
        type_val.setRequestFocusEnabled(true);
        type_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                type_valActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(color)
                                .addGap(33, 33, 33)
                                .addComponent(color_val))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(index_No)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(index_val))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(type)
                                .addGap(18, 18, 18)
                                .addComponent(type_val, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(entities)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(index_No)
                    .addComponent(index_val))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type)
                    .addComponent(type_val, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(color_val)
                    .addComponent(color, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entities, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void type_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_type_valActionPerformed
        // gets the index of the selected option and sends it to the MainUI class
       int selected = type_val.getSelectedIndex();
       switch(selected)
                {
                    case 0: //JOptionPane.showMessageDialog(JTabbedPane1, "Please select a valid option", "Warning", JOptionPane.WARNING_MESSAGE);
                            break;
                    case 1: MainUI.addElements(1);
                            break;
                    case 2: MainUI.addElements(2);
                            break;
                    case 3: MainUI.addElements(3);
                            break;
                    case 4: MainUI.addElements(4);
                            break;
                    case 5: MainUI.addElements(5);
                            break;
                    case 6: MainUI.addElements(6);
                            break;
                }
       
        
    }//GEN-LAST:event_type_valActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel color;
    private javax.swing.JLabel color_val;
    private javax.swing.JButton entities;
    private javax.swing.JLabel index_No;
    private javax.swing.JLabel index_val;
    private javax.swing.JLabel type;
    public javax.swing.JComboBox type_val;
    // End of variables declaration//GEN-END:variables

    //To be used in case of working with CellRenderer and CellEditor
    
    /*@Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return this;
    }

    @Override
    public Object getCellEditorValue() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean isCellEditable(EventObject anEvent) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return true;
    }

    @Override
    public boolean shouldSelectCell(EventObject anEvent) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return false;
    }

    @Override
    public boolean stopCellEditing() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return false;
    }

    @Override
    public void cancelCellEditing() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void addCellEditorListener(CellEditorListener l) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        type_val.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                int selected= type_val.getSelectedIndex();
                
                switch(selected)
                {
                    case 0: //JOptionPane.showMessageDialog(JTabbedPane1, "Please select a valid option", "Warning", JOptionPane.WARNING_MESSAGE);
                            break;
                    case 1: MainUI.addElements(1);
                            break;
                    case 2: MainUI.addElements(2);
                            break;
                    case 3: MainUI.addElements(3);
                            break;
                    case 4: MainUI.addElements(4);
                            break;
                    case 5: MainUI.addElements(5);
                            break;
                    case 6: MainUI.addElements(6);
                            break;
                }
            }
        });
    }

    @Override
    public void removeCellEditorListener(CellEditorListener l) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return this;
    }*/
}
